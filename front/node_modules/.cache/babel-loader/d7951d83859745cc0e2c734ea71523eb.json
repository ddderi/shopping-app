{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:3000\"\n});\nexport async function loggingUser(email, password) {\n  try {\n    const result = await axiosInstance.post('/login', {\n      user: {\n        email: email,\n        password: password\n      }\n    }, {\n      withCredentials: true\n    });\n    return result.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function registrationUser(email, password, password_confirmation, first_name, last_name, street_address_1, street_address_2, city, state, zipcode) {\n  try {\n    const result = await axiosInstance.post(\"/users\", {\n      user: {\n        email: email,\n        password: password,\n        password_confirmation: password_confirmation,\n        first_name: first_name,\n        last_name: last_name,\n        address_attributes: {\n          street_address_1: street_address_1,\n          street_address_2: street_address_2,\n          city: city,\n          state: state,\n          zipcode: zipcode\n        }\n      }\n    }, {\n      withCredentials: true\n    });\n    return result.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function logout() {\n  try {\n    const result = await axiosInstance.delete('/logout', {\n      withCredentials: true\n    });\n    return console.log(result.data);\n  } catch (error) {}\n} // function logout(){\n//     axios.delete('http://localhost:3000/logout', {withCredentials: true})\n//     .then(response => {\n//       if(response.data.logged_out && loggedIn === true){\n//         setLoggedIn(false)\n//         setUser({})\n//         setMessage('')\n//         console.log(response)\n//       }else if(!response.data.logged_out && loggedIn === false){\n//         console.log('problem')\n//       }\n//     })\n//   }","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","loggingUser","email","password","result","post","user","withCredentials","data","error","console","log","registrationUser","password_confirmation","first_name","last_name","street_address_1","street_address_2","city","state","zipcode","address_attributes","logout","delete"],"sources":["/home/dorken/development/shopping-app/shopping-front/src/requests/RequestUser.js"],"sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({baseURL: \"http://localhost:3000\"})\n\n\nexport async function loggingUser(email, password){\n    try{\n        const result = await axiosInstance.post('/login', {\n            user: {\n            email: email,\n            password: password\n            }\n        }, { withCredentials: true });\n        return result.data\n    }catch(error){\n        console.log(error)\n    }\n}\n\n\nexport async function registrationUser(email, password, \n    password_confirmation, \n    first_name, last_name, \n    street_address_1, \n    street_address_2, \n    city, \n    state, \n    zipcode ){\n        try{\n            const result = await axiosInstance.post(\"/users\", {\n                user: {\n                    email: email,\n                    password: password,\n                    password_confirmation: password_confirmation,\n                    first_name: first_name,\n                    last_name: last_name,\n                    address_attributes: {\n                    street_address_1: street_address_1,\n                    street_address_2: street_address_2,\n                    city: city,\n                    state: state,\n                    zipcode: zipcode}\n                  } \n            }, { withCredentials: true });\n            return result.data\n        }catch(error){\n            console.log(error)\n        }\n}\n\nexport async function logout(){\n    try{\n        const result = await axiosInstance.delete('/logout', {withCredentials: true})\n        return console.log(result.data)\n    \n    }catch(error){\n\n    }\n}\n\n\n\n\n\n// function logout(){\n//     axios.delete('http://localhost:3000/logout', {withCredentials: true})\n//     .then(response => {\n//       if(response.data.logged_out && loggedIn === true){\n//         setLoggedIn(false)\n//         setUser({})\n//         setMessage('')\n//         console.log(response)\n//       }else if(!response.data.logged_out && loggedIn === false){\n//         console.log('problem')\n//       }\n//     })\n//   }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;EAACC,OAAO,EAAE;AAAV,CAAb,CAAtB;AAGA,OAAO,eAAeC,WAAf,CAA2BC,KAA3B,EAAkCC,QAAlC,EAA2C;EAC9C,IAAG;IACC,MAAMC,MAAM,GAAG,MAAMN,aAAa,CAACO,IAAd,CAAmB,QAAnB,EAA6B;MAC9CC,IAAI,EAAE;QACNJ,KAAK,EAAEA,KADD;QAENC,QAAQ,EAAEA;MAFJ;IADwC,CAA7B,EAKlB;MAAEI,eAAe,EAAE;IAAnB,CALkB,CAArB;IAMA,OAAOH,MAAM,CAACI,IAAd;EACH,CARD,CAQC,OAAMC,KAAN,EAAY;IACTC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ;AAGD,OAAO,eAAeG,gBAAf,CAAgCV,KAAhC,EAAuCC,QAAvC,EACHU,qBADG,EAEHC,UAFG,EAESC,SAFT,EAGHC,gBAHG,EAIHC,gBAJG,EAKHC,IALG,EAMHC,KANG,EAOHC,OAPG,EAOM;EACL,IAAG;IACC,MAAMhB,MAAM,GAAG,MAAMN,aAAa,CAACO,IAAd,CAAmB,QAAnB,EAA6B;MAC9CC,IAAI,EAAE;QACFJ,KAAK,EAAEA,KADL;QAEFC,QAAQ,EAAEA,QAFR;QAGFU,qBAAqB,EAAEA,qBAHrB;QAIFC,UAAU,EAAEA,UAJV;QAKFC,SAAS,EAAEA,SALT;QAMFM,kBAAkB,EAAE;UACpBL,gBAAgB,EAAEA,gBADE;UAEpBC,gBAAgB,EAAEA,gBAFE;UAGpBC,IAAI,EAAEA,IAHc;UAIpBC,KAAK,EAAEA,KAJa;UAKpBC,OAAO,EAAEA;QALW;MANlB;IADwC,CAA7B,EAclB;MAAEb,eAAe,EAAE;IAAnB,CAdkB,CAArB;IAeA,OAAOH,MAAM,CAACI,IAAd;EACH,CAjBD,CAiBC,OAAMC,KAAN,EAAY;IACTC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACR;AAED,OAAO,eAAea,MAAf,GAAuB;EAC1B,IAAG;IACC,MAAMlB,MAAM,GAAG,MAAMN,aAAa,CAACyB,MAAd,CAAqB,SAArB,EAAgC;MAAChB,eAAe,EAAE;IAAlB,CAAhC,CAArB;IACA,OAAOG,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACI,IAAnB,CAAP;EAEH,CAJD,CAIC,OAAMC,KAAN,EAAY,CAEZ;AACJ,C,CAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}